{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$defs": {
        "catalog": {
            "type": "string",
            "title": "Catalog",
            "description": "Name of the VCD catalog in which the VM template is stored.",
            "examples": [
                "giantswarm"
            ]
        },
        "cidrBlocks": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "IPv4 address range, in CIDR notation.",
                "examples": [
                    "10.244.0.0/16"
                ]
            },
            "maxItems": 1,
            "minItems": 1
        },
        "diskSizeGB": {
            "type": "integer",
            "title": "Disk size",
            "examples": [
                30
            ],
            "exclusiveMinimum": 0
        },
        "featureGate": {
            "type": "object",
            "title": "Feature gate",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled"
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "examples": [
                        "UserNamespacesStatelessPodsSupport"
                    ],
                    "pattern": "^[A-Za-z0-9]+$"
                }
            }
        },
        "nodeLabels": {
            "type": "array",
            "title": "Node labels",
            "items": {
                "type": "string",
                "title": "Custom node label",
                "examples": [
                    "key=value"
                ],
                "pattern": "^[A-Za-z0-9-_\\./]{1,63}=[A-Za-z0-9-_\\.]{0,63}$"
            }
        },
        "nodeTaints": {
            "type": "array",
            "title": "Node taints",
            "items": {
                "type": "object",
                "title": "Custom node taint",
                "required": [
                    "key",
                    "effect"
                ],
                "additionalProperties": false,
                "properties": {
                    "effect": {
                        "type": "string",
                        "description": "One of NoSchedule, PreferNoSchedule or NoExecute",
                        "enum": [
                            "NoSchedule",
                            "PreferNoSchedule",
                            "NoExecute"
                        ]
                    },
                    "key": {
                        "type": "string",
                        "description": "Name of the label on a node",
                        "minLength": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "value of the label identified by the key"
                    }
                }
            }
        },
        "placementPolicy": {
            "type": "string",
            "title": "VM placement policy",
            "description": "Name of the VCD VM placement policy to use."
        },
        "sizingPolicy": {
            "type": "string",
            "title": "Sizing policy",
            "description": "Name of the VCD sizing policy to use.",
            "examples": [
                "m1.medium"
            ]
        },
        "storageProfile": {
            "type": "string",
            "title": "Storage profile",
            "description": "Name of the VCD storage profile to use."
        },
        "template": {
            "type": "string",
            "title": "Template",
            "description": "Name of the template used to create the node VMs.",
            "examples": [
                "ubuntu-2004-kube-v1.22.5"
            ]
        }
    },
    "type": "object",
    "required": [
        "baseDomain",
        "controlPlane",
        "connectivity",
        "nodePools"
    ],
    "additionalProperties": false,
    "properties": {
        "baseDomain": {
            "type": "string",
            "title": "Base DNS domain",
            "default": "k8s.test"
        },
        "cluster-shared": {
            "type": "object",
            "title": "Library chart"
        },
        "connectivity": {
            "type": "object",
            "title": "Connectivity",
            "description": "Configurations related to cluster connectivity such as container registries.",
            "required": [
                "network"
            ],
            "additionalProperties": false,
            "properties": {
                "containerRegistries": {
                    "type": "object",
                    "title": "Container registries",
                    "description": "Endpoints and credentials configuration for container registries.",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "endpoint"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "credentials": {
                                    "type": "object",
                                    "title": "Credentials",
                                    "description": "Credentials for the endpoint.",
                                    "additionalProperties": false,
                                    "properties": {
                                        "auth": {
                                            "type": "string",
                                            "title": "Auth",
                                            "description": "Base64-encoded string from the concatenation of the username, a colon, and the password."
                                        },
                                        "identitytoken": {
                                            "type": "string",
                                            "title": "Identity token",
                                            "description": "Used to authenticate the user and obtain an access token for the registry."
                                        },
                                        "password": {
                                            "type": "string",
                                            "title": "Password",
                                            "description": "Used to authenticate for the registry with username/password."
                                        },
                                        "username": {
                                            "type": "string",
                                            "title": "Username",
                                            "description": "Used to authenticate for the registry with username/password."
                                        }
                                    }
                                },
                                "endpoint": {
                                    "type": "string",
                                    "title": "Endpoint",
                                    "description": "Endpoint for the container registry."
                                }
                            }
                        }
                    },
                    "default": {}
                },
                "network": {
                    "type": "object",
                    "title": "Network",
                    "required": [
                        "loadBalancers",
                        "pods",
                        "services"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "controlPlaneEndpoint": {
                            "type": "object",
                            "title": "Control plane endpoint",
                            "description": "Kubernetes API endpoint.",
                            "additionalProperties": false,
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "title": "Host"
                                },
                                "port": {
                                    "type": "integer",
                                    "title": "Port number",
                                    "default": 6443
                                }
                            }
                        },
                        "extraOvdcNetworks": {
                            "type": "array",
                            "title": "Extra OVDC networks",
                            "description": "OVDC networks to attach VMs to, additionally.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "hostEntries": {
                            "type": "array",
                            "title": "Host entries",
                            "items": {
                                "type": "object",
                                "required": [
                                    "ip",
                                    "fqdn"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "fqdn": {
                                        "type": "string",
                                        "title": "FQDN"
                                    },
                                    "ip": {
                                        "type": "string",
                                        "title": "IP address",
                                        "format": "ipv4"
                                    }
                                }
                            }
                        },
                        "loadBalancers": {
                            "type": "object",
                            "title": "Load Balancers",
                            "required": [
                                "vipSubnet"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "vipSubnet": {
                                    "type": "string",
                                    "title": "Virtual IP subnet",
                                    "description": "Virtual IP CIDR for the external network."
                                }
                            }
                        },
                        "pods": {
                            "type": "object",
                            "title": "Pods",
                            "required": [
                                "cidrBlocks"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "cidrBlocks": {
                                    "$ref": "#/$defs/cidrBlocks",
                                    "title": "Pod subnets",
                                    "default": [
                                        "10.244.0.0/16"
                                    ]
                                }
                            }
                        },
                        "services": {
                            "type": "object",
                            "title": "Services",
                            "required": [
                                "cidrBlocks"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "cidrBlocks": {
                                    "$ref": "#/$defs/cidrBlocks",
                                    "title": "Service subnets",
                                    "default": [
                                        "172.31.0.0/16"
                                    ]
                                }
                            }
                        },
                        "staticRoutes": {
                            "type": "array",
                            "title": "Static routes",
                            "items": {
                                "type": "object",
                                "required": [
                                    "destination",
                                    "via"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "destination": {
                                        "type": "string",
                                        "title": "Destination",
                                        "description": "IPv4 address range in CIDR notation.",
                                        "examples": [
                                            "10.128.0.0/16"
                                        ]
                                    },
                                    "via": {
                                        "type": "string",
                                        "title": "Via",
                                        "format": "ipv4"
                                    }
                                }
                            }
                        }
                    }
                },
                "ntp": {
                    "type": "object",
                    "title": "Time synchronization (NTP)",
                    "description": "Servers/pools to synchronize this cluster's clocks with.",
                    "additionalProperties": false,
                    "properties": {
                        "pools": {
                            "type": "array",
                            "title": "Pools",
                            "items": {
                                "type": "string",
                                "title": "Pool",
                                "examples": [
                                    "ntp.ubuntu.com"
                                ]
                            }
                        },
                        "servers": {
                            "type": "array",
                            "title": "Servers",
                            "items": {
                                "type": "string",
                                "title": "Server"
                            }
                        }
                    }
                },
                "proxy": {
                    "type": "object",
                    "title": "Proxy",
                    "description": "Whether/how outgoing traffic is routed through proxy servers.",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable"
                        },
                        "secretName": {
                            "type": "string",
                            "title": "Secret name",
                            "description": "Name of a secret resource used by containerd to obtain the HTTP_PROXY, HTTPS_PROXY, and NO_PROXY environment variables. If empty the value will be defaulted to <clusterName>-cluster-values.",
                            "pattern": "^[a-z0-9-]{0,63}$"
                        }
                    }
                },
                "shell": {
                    "type": "object",
                    "title": "Shell access",
                    "additionalProperties": false,
                    "properties": {
                        "osUsers": {
                            "type": "array",
                            "title": "OS Users",
                            "description": "Configuration for OS users in cluster nodes.",
                            "items": {
                                "type": "object",
                                "title": "User",
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Username of the user.",
                                        "minLength": 2,
                                        "pattern": "^[a-z][-a-z0-9]+$"
                                    },
                                    "sudo": {
                                        "type": "string",
                                        "title": "Sudoers configuration",
                                        "description": "Permissions string to add to /etc/sudoers for this user."
                                    }
                                }
                            },
                            "default": [
                                {
                                    "name": "giantswarm",
                                    "sudo": "ALL=(ALL) NOPASSWD:ALL"
                                }
                            ]
                        },
                        "sshTrustedUserCAKeys": {
                            "type": "array",
                            "title": "Trusted SSH cert issuers",
                            "description": "CA certificates of issuers that are trusted to sign SSH user certificates.",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM4cvZ01fLmO9cJbWUj7sfF+NhECgy+Cl0bazSrZX7sU vault-ca@vault.operations.giantswarm.io"
                            ]
                        }
                    }
                }
            }
        },
        "controlPlane": {
            "type": "object",
            "title": "Control plane",
            "required": [
                "catalog",
                "template",
                "replicas",
                "dns",
                "etcd",
                "resourceRatio"
            ],
            "additionalProperties": false,
            "properties": {
                "catalog": {
                    "$ref": "#/$defs/catalog",
                    "title": "Catalog",
                    "description": "VCD catalog where the VM template is stored."
                },
                "certSANs": {
                    "type": "array",
                    "title": "Subject alternative names (SAN)",
                    "description": "Alternative names to encode in the API server's certificate.",
                    "items": {
                        "type": "string",
                        "title": "SAN"
                    }
                },
                "customNodeLabels": {
                    "$ref": "#/$defs/nodeLabels",
                    "title": "Custom node labels"
                },
                "diskSizeGB": {
                    "$ref": "#/$defs/diskSizeGB",
                    "title": "Disk size",
                    "description": "Control plane node root volume size, in GB.",
                    "default": 30
                },
                "dns": {
                    "type": "object",
                    "title": "DNS container image",
                    "additionalProperties": false,
                    "properties": {
                        "imageRepository": {
                            "type": "string",
                            "title": "Repository",
                            "examples": [
                                "projects.registry.vmware.com/tkg"
                            ],
                            "default": "projects.registry.vmware.com/tkg"
                        },
                        "imageTag": {
                            "type": "string",
                            "title": "Tag",
                            "examples": [
                                "v1.7.0_vmware.12"
                            ],
                            "default": "v1.7.0_vmware.12"
                        }
                    }
                },
                "etcd": {
                    "type": "object",
                    "title": "Etcd container image",
                    "additionalProperties": false,
                    "properties": {
                        "imageRepository": {
                            "type": "string",
                            "title": "Repository",
                            "examples": [
                                "giantswarm"
                            ],
                            "default": "giantswarm"
                        },
                        "imageTag": {
                            "type": "string",
                            "title": "Tag",
                            "examples": [
                                "3.5.4-0-k8s"
                            ],
                            "default": "3.5.4-0-k8s"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "title": "Node container image",
                    "additionalProperties": false,
                    "properties": {
                        "repository": {
                            "type": "string",
                            "title": "Repository",
                            "examples": [
                                "projects.registry.vmware.com/tkg"
                            ],
                            "default": "projects.registry.vmware.com/tkg"
                        }
                    }
                },
                "oidc": {
                    "type": "object",
                    "title": "OIDC authentication",
                    "required": [
                        "clientId",
                        "groupsClaim",
                        "issuerUrl",
                        "usernameClaim"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "caFile": {
                            "type": "string",
                            "title": "Certificate authority file",
                            "description": "Path to identity provider's CA certificate in PEM format."
                        },
                        "clientId": {
                            "type": "string",
                            "title": "Client ID",
                            "description": "OIDC client identifier to identify with."
                        },
                        "groupsClaim": {
                            "type": "string",
                            "title": "Groups claim",
                            "description": "Name of the identity token claim bearing the user's group memberships."
                        },
                        "groupsPrefix": {
                            "type": "string",
                            "title": "Groups prefix",
                            "description": "Prefix prepended to groups values to prevent clashes with existing names."
                        },
                        "issuerUrl": {
                            "type": "string",
                            "title": "Issuer URL",
                            "description": "URL of the provider which allows the API server to discover public signing keys, not including any path. Discovery URL without the '/.well-known/openid-configuration' part."
                        },
                        "usernameClaim": {
                            "type": "string",
                            "title": "Username claim",
                            "description": "Name of the identity token claim bearing the unique user identifier."
                        },
                        "usernamePrefix": {
                            "type": "string",
                            "title": "Username prefix",
                            "description": "Prefix prepended to username values to prevent clashes with existing names."
                        }
                    }
                },
                "placementPolicy": {
                    "$ref": "#/$defs/placementPolicy"
                },
                "replicas": {
                    "type": "integer",
                    "title": "Number of nodes",
                    "description": "Number of control plane instances to create. Must be an odd number.",
                    "default": 1
                },
                "resourceRatio": {
                    "type": "integer",
                    "title": "Resource ratio",
                    "description": "Ratio between node resources and apiserver resource requests.",
                    "default": 8,
                    "minimum": 2
                },
                "sizingPolicy": {
                    "$ref": "#/$defs/sizingPolicy"
                },
                "storageProfile": {
                    "$ref": "#/$defs/storageProfile"
                },
                "template": {
                    "$ref": "#/$defs/template",
                    "title": "VM template"
                }
            }
        },
        "internal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "apiServer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enableAdmissionPlugins": {
                            "type": "array",
                            "title": "Admission plugins",
                            "description": "List of admission plugins to be passed to the API server via the --enable-admission-plugins flag.",
                            "items": {
                                "type": "string",
                                "title": "Plugin",
                                "examples": [
                                    "DefaultStorageClass",
                                    "Priority"
                                ],
                                "pattern": "^[A-Za-z0-9]+$"
                            },
                            "default": [
                                "DefaultStorageClass",
                                "DefaultTolerationSeconds",
                                "LimitRanger",
                                "MutatingAdmissionWebhook",
                                "NamespaceLifecycle",
                                "PersistentVolumeClaimResize",
                                "Priority",
                                "ResourceQuota",
                                "ServiceAccount",
                                "ValidatingAdmissionWebhook"
                            ]
                        },
                        "featureGates": {
                            "type": "array",
                            "title": "Feature gates",
                            "description": "API server feature gate activation/deactivation.",
                            "items": {
                                "$ref": "#/$defs/featureGate"
                            },
                            "default": []
                        }
                    }
                },
                "cilium": {
                    "type": "object",
                    "title": "Cilium configuration",
                    "properties": {
                        "networkPolicy": {
                            "type": "object",
                            "title": "Network Policies",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable CiliumNetworkPolicies",
                                    "description": "Installs the network-policies-app (deny all by default) if set to true",
                                    "default": true
                                }
                            }
                        },
                        "policyAuditMode": {
                            "type": "boolean",
                            "title": "Enable Cilium policyAuditMode",
                            "description": "Enables or disables Audit Mode.",
                            "default": false
                        }
                    }
                },
                "controllerManager": {
                    "type": "object",
                    "title": "Controller manager",
                    "additionalProperties": false,
                    "properties": {
                        "featureGates": {
                            "type": "array",
                            "title": "Feature gates",
                            "description": "Controller manager feature gate activation/deactivation.",
                            "items": {
                                "$ref": "#/$defs/featureGate"
                            },
                            "default": []
                        }
                    }
                },
                "kubernetesVersion": {
                    "type": "string",
                    "title": "Kubernetes version"
                },
                "parentUid": {
                    "type": "string",
                    "title": "Management cluster UID",
                    "description": "If set, create the cluster from a specific management cluster associated with this UID."
                },
                "rdeId": {
                    "type": "string",
                    "title": "Runtime defined entity (RDE) identifier",
                    "description": "This cluster's RDE ID in the VCD API."
                },
                "sandboxContainerImage": {
                    "type": "object",
                    "title": "Sandbox Container image (pause container)",
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Repository",
                            "default": "giantswarm/pause"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Registry",
                            "default": "quay.io"
                        },
                        "tag": {
                            "type": "string",
                            "title": "Tag",
                            "default": "3.9"
                        }
                    }
                },
                "skipRde": {
                    "type": "boolean",
                    "title": "Skip RDE",
                    "description": "Set to true if the API schema extension is installed in the correct version in VCD to create CAPVCD entities in the API. Set to false otherwise."
                },
                "useAsManagementCluster": {
                    "type": "boolean",
                    "title": "Display as management cluster",
                    "default": false
                }
            }
        },
        "kubectlImage": {
            "type": "object",
            "title": "Kubectl image",
            "description": "Used by cluster-shared library chart to configure coredns in-cluster.",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Repository",
                    "default": "giantswarm/kubectl"
                },
                "registry": {
                    "type": "string",
                    "title": "Registry",
                    "default": "quay.io"
                },
                "tag": {
                    "type": "string",
                    "title": "Tag",
                    "default": "1.23.5"
                }
            }
        },
        "managementCluster": {
            "type": "string",
            "title": "Management cluster name",
            "description": "The Cluster API management cluster that manages this cluster."
        },
        "metadata": {
            "type": "object",
            "title": "Metadata",
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string",
                    "title": "Cluster description",
                    "description": "User-friendly description of the cluster's purpose."
                },
                "labels": {
                    "type": "object",
                    "title": "Labels",
                    "description": "These labels are added to the Kubernetes resources defining this cluster.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9/\\._-]+$": {
                            "type": "string",
                            "title": "Label",
                            "maxLength": 63,
                            "minLength": 0,
                            "pattern": "^[a-zA-Z0-9\\._-]+$"
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "title": "Organization"
                },
                "preventDeletion": {
                    "type": "boolean",
                    "title": "Prevent cluster deletion",
                    "default": false
                },
                "servicePriority": {
                    "type": "string",
                    "title": "Service priority",
                    "description": "The relative importance of this cluster.",
                    "$comment": "Defined in https://github.com/giantswarm/rfc/tree/main/classify-cluster-priority",
                    "enum": [
                        "highest",
                        "medium",
                        "lowest"
                    ],
                    "default": "highest"
                }
            }
        },
        "nodePools": {
            "type": "object",
            "title": "Node pools",
            "description": "Groups of worker nodes with identical configuration.",
            "additionalProperties": false,
            "patternProperties": {
                "^[a-z0-9-]{3,10}$": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "class": {
                            "type": "string",
                            "title": "Node class",
                            "description": "A valid node class name, as specified in VMware Cloud Director (VCD) settings > Node classes.",
                            "pattern": "^[a-z0-9-]+$"
                        },
                        "replicas": {
                            "type": "integer",
                            "title": "Number of nodes",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                }
            }
        },
        "provider": {
            "type": "string",
            "title": "Cluster API provider name"
        },
        "providerSpecific": {
            "type": "object",
            "title": "VMware Cloud Director (VCD) settings",
            "required": [
                "org",
                "ovdc",
                "ovdcNetwork",
                "site"
            ],
            "additionalProperties": false,
            "properties": {
                "cloudProviderInterface": {
                    "type": "object",
                    "title": "Cloud provider interface (CPI)",
                    "required": [
                        "enableVirtualServiceSharedIP",
                        "oneArm"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enableVirtualServiceSharedIP": {
                            "type": "boolean",
                            "title": "Share IPs in virtual services",
                            "description": "If enabled, multiple virtual services can share the same virtual IP address.",
                            "default": true
                        },
                        "oneArm": {
                            "type": "object",
                            "title": "One-arm",
                            "description": "If enabled, use an internal IP for the virtual service with a NAT rule to expose the external IP. Otherwise the virtual service will be exposed directly with the external IP.",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "containerStorageInterface": {
                    "type": "object",
                    "title": "Container storage interface (CSI)",
                    "required": [
                        "storageClass"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "storageClass": {
                            "type": "object",
                            "title": "Pre-create storage class",
                            "description": "Pre-create storage class for the VCD CSI.",
                            "additionalProperties": false,
                            "properties": {
                                "delete": {
                                    "type": "object",
                                    "title": "Pre-create delete storage class",
                                    "properties": {
                                        "isDefault": {
                                            "type": "boolean",
                                            "title": "Default storage class",
                                            "default": true
                                        },
                                        "vcdStorageProfileName": {
                                            "type": "string",
                                            "title": "Name of storage profile in VCD",
                                            "default": ""
                                        }
                                    }
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable",
                                    "default": true
                                },
                                "retain": {
                                    "type": "object",
                                    "title": "Pre-create retain storage class",
                                    "properties": {
                                        "isDefault": {
                                            "type": "boolean",
                                            "title": "Default storage class",
                                            "default": false
                                        },
                                        "vcdStorageProfileName": {
                                            "type": "string",
                                            "title": "Name of storage profile in VCD",
                                            "default": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "nodeClasses": {
                    "type": "object",
                    "title": "Node classes",
                    "description": "Re-usable node configuration.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-z0-9-]+$": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "catalog": {
                                    "$ref": "#/$defs/catalog"
                                },
                                "customNodeLabels": {
                                    "$ref": "#/$defs/nodeLabels"
                                },
                                "customNodeTaints": {
                                    "$ref": "#/$defs/nodeTaints"
                                },
                                "diskSizeGB": {
                                    "$ref": "#/$defs/diskSizeGB",
                                    "description": "Node root volume size, in GB.",
                                    "default": 30
                                },
                                "placementPolicy": {
                                    "$ref": "#/$defs/placementPolicy"
                                },
                                "sizingPolicy": {
                                    "$ref": "#/$defs/sizingPolicy"
                                },
                                "storageProfile": {
                                    "$ref": "#/$defs/storageProfile"
                                },
                                "template": {
                                    "$ref": "#/$defs/template"
                                }
                            }
                        }
                    }
                },
                "org": {
                    "type": "string",
                    "title": "Organization",
                    "description": "VCD organization name."
                },
                "ovdc": {
                    "type": "string",
                    "title": "OvDC name",
                    "description": "Name of the organization virtual datacenter (OvDC) to create this cluster in."
                },
                "ovdcNetwork": {
                    "type": "string",
                    "title": "OvDC network",
                    "description": "VCD network to connect VMs."
                },
                "site": {
                    "type": "string",
                    "title": "Endpoint",
                    "description": "VCD endpoint URL in the format https://VCD_HOST, without trailing slash."
                },
                "userContext": {
                    "type": "object",
                    "title": "VCD API access token",
                    "additionalProperties": false,
                    "properties": {
                        "secretRef": {
                            "type": "object",
                            "title": "Secret reference",
                            "additionalProperties": false,
                            "properties": {
                                "secretName": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "Name of the secret containing the VCD API token."
                                }
                            }
                        }
                    }
                },
                "vmNamingTemplate": {
                    "type": "string",
                    "title": "VM naming template",
                    "description": "Go template to specify the VM naming convention.",
                    "examples": [
                        "mytenant-{{ .machine.Name | sha256sum | trunc 7 }}"
                    ]
                }
            }
        }
    }
}
