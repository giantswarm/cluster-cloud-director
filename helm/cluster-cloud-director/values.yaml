apiServer:
  enableAdmissionPlugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,PersistentVolumeClaimResize,DefaultStorageClass,Priority,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook"
  featureGates: "TTLAfterFinished=true"
controllerManager:
  featureGates: "ExpandPersistentVolumes=true,TTLAfterFinished=true"

baseDomain: k8s.test
clusterDescription: ""  # Cluster description used in metadata.
kubernetesVersion: ""
organization: ""  # The organization which owns this cluster.
servicePriority: "highest"

cloudDirector:
  site: ""  # VCD endpoint with the format https://VCD_HOST. No trailing '/'.
  org: ""  # VCD organization name.
  ovdc: ""  # VCD virtual datacenter.
  ovdcNetwork: ""  # VCD network to connect VMs.

cluster:
  rdeId: ""  # (Optional) If empty, CAPVCD will create one.
  parentUid: ""  # (Optional) Create the CAPVCD cluster from a specific management cluster associated with this UID.
  useAsManagementCluster: false  # (Optional) Displays as management cluster in the UI (cosmetic).

oidc:
  issuerUrl: ""
  caFile: ""
  clientId: ""
  usernameClaim: ""
  groupsClaim: ""
  usernamePrefix: ""

controlPlane:  # Must match nodeClasses' fields except "name" and must contain "replicas".
  replicas: 0  # Number of control plane instances to create (odd number).
  catalog: ""  # VCD catalog where the template is stored.
  template: ""  # template used to create (or) upgrade control plane nodes.
  sizingPolicy: ""  # Sizing policy for the control plane VMs. "" for no sizing policy.
  placementPolicy: ""  # Placement policy for control plane VMs. "" for no placement Policy.
  storageProfile: ""  # Storage profile for the control plane VMs. "" for no Storage profile.
  diskSizeGB: ""
  etcd:
    imageRepository: "giantswarm"
    imageTag: 3.5.4-0-k8s
  dns:
    imageRepository: projects.registry.vmware.com/tkg
    imageTag: v1.7.0_vmware.12
  image:
    repository: projects.registry.vmware.com/tkg
  resourceRatio: 8  # Ratio between node resources and apiserver resource requests.

network:
  podsCidrBlocks:
  - "100.96.0.0/11"
  servicesCidrBlocks:
  - "100.64.0.0/13"
  controlPlaneEndpoint:
    host: ""  # [string] Manually select an IP for kube API. "" for auto selection from pool.
    port: ""  # [int] Port to use. "" defaults to 6443.
  loadBalancer:
    vipSubnet: ""  # Virtual IP CIDR for the external network.
  staticRoutes: []
#  - destination: "10.128.0.0/16"
#    via: "192.168.52.254"
#  - destination: "10.254.0.0/16"
#    via: "192.168.52.254"
  extraOvdcNetworks: []  # Ovdc networks to attach VMs in addition to .cloudDirector.ovdcNetwork
# - network-1
# - network-2

proxy:  # (Optional) Defines HTTP proxy environment variables.
  secretName: ""
  enabled: false

nodeClasses: {}  # Class definitions for worker node pools. The "name" of the class is the key of the object. Example:
  # default:  # Name of the class to use in nodePool and machinetemplate name.
  #   catalog: ""
  #   template: ""
  #   sizingPolicy: ""
  #   placementPolicy: ""
  #   storageProfile: ""
  #   diskSizeGB: ""

nodePools: {}
  # worker:
  #   class: default  # Node classes name (defined above)
  #   replicas: 2

ssh:
  users:  # (Optional) public SSH keys/users to access the nodes.
    - name: ""
      authorizedKeys:
        - ""

userContext:
  secretRef:
    secretName: ""  # Name of the pre-existing secret containing the credentials of the VCD user.

# cluster-shared configuration
includeClusterResourceSet: "true"  # must be a string
# let's use the kubectl image defaults
kubectlImage: {}
