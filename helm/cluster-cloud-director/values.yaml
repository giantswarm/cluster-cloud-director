cluster:
  kubernetesVersion: ""
  name: "" # Cluster name; used as a base for names of all cluster resources.
  organization: "" # The organization which owns this cluster.
  serviceDomain: k8s.test
  network:
    podsCidrBlocks: # (Optional) List of CIDR(s) to use for pod IPs.
    - "100.96.0.0/11"
    servicesCidrBlocks: # (Optional) service CIDR for the cluster.
    - "100.64.0.0/13"

cloudDirector:
  site: "" # VCD endpoint with the format https://VCD_HOST. No trailing '/'.
  org: "" # VCD organization name.
  ovdc: "" # VCD virtual datacenter.
  ovdcNetwork: "" # VCD virtual datacenter network to connect VMs.
  defaultStorageClass:
    enable: false # Set to true only if a default storage class needs to be created.
    vcdStorageProfileName: "" # (Optional) VCD storage profile used to create the storage class.
    k8sStorageClassName: "" # (Optional) storage class in kubernetes.
    useDeleteReclaimPolicy: true # (Optional) true sets Reclaim policy to "Delete", false sets to "Retain".
    fileSystem: "ext4" # (Optional) file system format for the persistent volumes created from the storage class.
  rdeId: "" # (Optional) rdeId if it is already created. If empty, CAPVCD will create one for the cluster.
  parentUid: "" # (Optional) Create the CAPVCD cluster from a specific management cluster associated with this UID.
  useAsManagementCluster: false # (Optional) Displays as management cluster in the UI (cosmetic).

userContext:
  username: "" # (Optional) ignored if refreshToken is set.
  password: "" # (Optional) ignored if refreshToken is set.
  refreshToken: "" # (Optional) refreshToken (API token) - recommended.
  secretRef:
    # If set to false, ignores secretName and you must specify username/password or refreshToken which will be in userContext of VCDCluster.
    # If set to true, ignores credentials, you must specify secretName and have a pre-existing secret <= recommended method.
    useSecretRef: true
    # Name of the pre-existing secret containing the credentials of the VCD user.
    secretName: ""

template:
  catalog: "" # VCD Catalog hosting the templates.
  controlPlane: 
    template: ""  # template used to create (or) upgrade control plane nodes.
    sizingPolicy: "" # (Optional) Sizing policy for the control plane VMs (must be pre-published on the ovdc). "" for no sizing policy.
    placementPolicy: "" # (Optional) Placement policy for control plane VMs (must be pre-published on the ovdc). "" for no placement Policy.
    storageProfile: "" # (Optional) Storage profile for the control plane VMs (must be pre-published on the ovdc) "" for no Storage profile.
  workerNode: 
    template: ""  # template used to create (or) upgrade worker nodes.
    sizingPolicy: "" # (Optional) Sizing policy for the worker VMs (must be pre-published on the ovdc). "" for no sizing policy.
    placementPolicy: "" # (Optional) Placement policy for worker VMs (must be pre-published on the ovdc). "" for no placement Policy.
    storageProfile: "" # (Optional) Storage profile for the worker VMs (must be pre-published on the ovdc) "" for no Storage profile.

kubeadm:
  users:
    - name: ""
      authorizedKeys: # (Optional) All public SSH keys to assign to this user.
        - ""
  dns:
    image: 
      repository: projects.registry.vmware.com/tkg # (Optional) image repository to pull the DNS image from.
      tag: v1.7.0_vmware.12 # (Optional) DNS image tag associated with the TKGm OVA used. The values must be retrieved from the TKGm ova BOM.
  image:
    repository: projects.registry.vmware.com/tkg  # (Optional) image repository to use for the rest of kubernetes images.

controlPlane:
  replicas: 0 # Number of control plane instances to create (odd number).

worker:
  replicas: 0 # Number of worker instanes to create.